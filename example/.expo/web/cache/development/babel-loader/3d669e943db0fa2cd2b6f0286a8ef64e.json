{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { ThemeProvider, DefaultTheme, blue } from \"/Users/qutubun/Documents/source/libraries/native-ui/src/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Content } from \"./Content\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar customTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  fontFamily: {\n    regular: 'Manrope',\n    bold: 'Manrope-Bold'\n  },\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: _objectSpread(_objectSpread({}, blue), {}, {\n      500: '#ff4438'\n    })\n  })\n});\nexport default function App() {\n  var _useFonts = useFonts({\n      'Manrope': require(\"../assets/Manrope.ttf\"),\n      'Manrope-Bold': require(\"../assets/Manrope-Bold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = React.useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    onLayout: onLayoutRootView,\n    children: _jsx(ThemeProvider, {\n      theme: customTheme,\n      children: _jsx(SafeAreaView, {\n        style: styles.headerContainer,\n        children: _jsx(Content, {})\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  headerContainer: {\n    paddingTop: Platform.OS === 'android' ? 35 : 0\n  }\n});","map":{"version":3,"names":["React","ThemeProvider","DefaultTheme","blue","Platform","SafeAreaView","View","StyleSheet","useFonts","SplashScreen","Content","jsx","_jsx","customTheme","_objectSpread","fontFamily","regular","bold","colors","primary","App","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","useCallback","_asyncToGenerator","hideAsync","onLayout","children","theme","style","styles","headerContainer","create","paddingTop","OS"],"sources":["/Users/qutubun/Documents/source/libraries/native-ui/example/src/App.tsx"],"sourcesContent":["import React from 'react'\nimport { ThemeProvider, DefaultTheme, Theme, blue } from 'native-uikit'\nimport { Platform, SafeAreaView, View, StyleSheet } from 'react-native'\nimport { useFonts } from 'expo-font'\nimport * as SplashScreen from 'expo-splash-screen'\n\nimport { Content } from './Content'\n\nconst customTheme: Theme = {\n  ...DefaultTheme,\n  // fontSize: {\n  //   sm: 12,\n  // },\n  fontFamily: {\n    regular: 'Manrope',\n    bold: 'Manrope-Bold',\n  },\n\n  colors: {\n    ...DefaultTheme.colors,\n    primary: {\n      ...blue,\n      500: '#ff4438',\n    },\n  },\n}\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    'Manrope': require('../assets/Manrope.ttf'),\n    'Manrope-Bold': require('../assets/Manrope-Bold.ttf'),\n  })\n\n  const onLayoutRootView = React.useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync()\n    }\n  }, [fontsLoaded])\n\n  if (!fontsLoaded) {\n    return null\n  }\n\n  return (\n    <View onLayout={onLayoutRootView}>\n      <ThemeProvider theme={customTheme}>\n        <SafeAreaView style={styles.headerContainer}>\n          <Content />\n        </SafeAreaView>\n      </ThemeProvider>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  headerContainer: { paddingTop: Platform.OS === 'android' ? 35 : 0 },\n})\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,YAAY,EAASC,IAAI;AAAsB,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEvE,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAElD,SAASC,OAAO;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAEnC,IAAMC,WAAkB,GAAAC,aAAA,CAAAA,aAAA,KACnBZ,YAAY;EAIfa,UAAU,EAAE;IACVC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE;EACR,CAAC;EAEDC,MAAM,EAAAJ,aAAA,CAAAA,aAAA,KACDZ,YAAY,CAACgB,MAAM;IACtBC,OAAO,EAAAL,aAAA,CAAAA,aAAA,KACFX,IAAI;MACP,GAAG,EAAE;IAAS;EACf;AACF,EACF;AAED,eAAe,SAASiB,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBb,QAAQ,CAAC;MAC7B,SAAS,EAAEc,OAAO,wBAAwB,CAAC;MAC3C,cAAc,EAAEA,OAAO,6BAA6B;IACtD,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,WAAW,GAAAF,UAAA;EAKlB,IAAMG,gBAAgB,GAAG1B,KAAK,CAAC2B,WAAW,CAAAC,iBAAA,CAAC,aAAY;IACrD,IAAIH,WAAW,EAAE;MACf,MAAMhB,YAAY,CAACoB,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,GAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEb,IAAA,CAACN,IAAI;IAACwB,QAAQ,EAAEJ,gBAAiB;IAAAK,QAAA,EAC/BnB,IAAA,CAACX,aAAa;MAAC+B,KAAK,EAAEnB,WAAY;MAAAkB,QAAA,EAChCnB,IAAA,CAACP,YAAY;QAAC4B,KAAK,EAAEC,MAAM,CAACC,eAAgB;QAAAJ,QAAA,EAC1CnB,IAAA,CAACF,OAAO,IAAE;MAAC,CACC;IAAC,CACF;EAAC,CACZ,CAAC;AAEX;AAEA,IAAMwB,MAAM,GAAG3B,UAAU,CAAC6B,MAAM,CAAC;EAC/BD,eAAe,EAAE;IAAEE,UAAU,EAAEjC,QAAQ,CAACkC,EAAE,KAAK,SAAS,GAAG,EAAE,GAAG;EAAE;AACpE,CAAC,CAAC"},"metadata":{},"sourceType":"module"}